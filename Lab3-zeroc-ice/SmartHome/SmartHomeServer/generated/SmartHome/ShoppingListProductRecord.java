//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.10
//
// <auto-generated>
//
// Generated from file `server.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SmartHome;

public class ShoppingListProductRecord implements java.lang.Cloneable,
                                                  java.io.Serializable
{
    public int id;

    public Product product;

    public ShoppingListProductRecord()
    {
        this.product = new Product();
    }

    public ShoppingListProductRecord(int id, Product product)
    {
        this.id = id;
        this.product = product;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ShoppingListProductRecord r = null;
        if(rhs instanceof ShoppingListProductRecord)
        {
            r = (ShoppingListProductRecord)rhs;
        }

        if(r != null)
        {
            if(this.id != r.id)
            {
                return false;
            }
            if(this.product != r.product)
            {
                if(this.product == null || r.product == null || !this.product.equals(r.product))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::SmartHome::ShoppingListProductRecord");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, id);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, product);
        return h_;
    }

    public ShoppingListProductRecord clone()
    {
        ShoppingListProductRecord c = null;
        try
        {
            c = (ShoppingListProductRecord)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeInt(this.id);
        Product.ice_write(ostr, this.product);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.id = istr.readInt();
        this.product = Product.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, ShoppingListProductRecord v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public ShoppingListProductRecord ice_read(com.zeroc.Ice.InputStream istr)
    {
        ShoppingListProductRecord v = new ShoppingListProductRecord();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<ShoppingListProductRecord> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, ShoppingListProductRecord v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<ShoppingListProductRecord> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(ShoppingListProductRecord.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final ShoppingListProductRecord _nullMarshalValue = new ShoppingListProductRecord();

    /** @hidden */
    public static final long serialVersionUID = -1649261269L;
}
